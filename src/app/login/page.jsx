"use client"
import axios from "axios"
import { useState } from "react"
import Router from "next/router"
import { useRouter } from "next/navigation"
import Image from "next/image"
import { AnimatePresence, motion } from "framer-motion"
import Cookies from "js-cookie"
import SpinningLoader from "../_components/SpinningLoader"
import Blob from "../_components/Blob"

export default function Login({ setLoggedIn }) {
    const router = useRouter();
    const [username, setUsername] = useState('')
    const [password, setPassword] = useState('')
    const [message, setMessage] = useState(null)
    const [loading, setLoading] = useState(false)

    const handleSignIn = async () => {
        if (username && password) {
            setLoading(true)
            try {

                const res = await axios.get('/api/userExist/',
                    {
                        params: {
                            username: username,
                            password: password
                        }
                    }
                )
                if (res.data) {
                    if (res.data.message === 200) {
                        if (res.data.user.username === 'vadmin') {
                            router.push('/view-data')
                        }
                        else if (res.data.user.username === 'admin') {
                            router.push('/admin')
                        }
                        else {
                            router.push('/generate')
                        }
                        setLoading(false)

                    }
                    else {
                        setLoading(false)
                        setMessage('Incorrect username or password')
                    }
                }
            }
            catch (err) {
                console.log(err)
            }
        }
        else {
            setMessage("Enter both username and password")
        }
    }

    return (
        <div className=" flex-[2]  max-sm:flex-col h-[100vh]">
            <div className="flex relative  items-center justify-center flex-col h-full gap-2 bg-gray-100">
                {/* <div className="absolute font-extrabold top-0 text-[10rem] text-gray-200 opensans">Welcome to PNGEN</div> */}
                {/* <svg className="absolute top-0" viewBox="0 0 500 200">
                    <path className="front-svg" d="M 0 50 C 150 130 280 0 500 20 L 500 0 L 0 0" fill="rgb(228, 228, 228)"></path>
                </svg>

                <svg className="absolute bottom-0 rotate-180" viewBox="0 0 500 200">
                    <path className="front-svg" d="M 0 50 C 150 130 280 0 500 20 L 500 0 L 0 0" fill="rgb(228, 228, 228)"></path>
                </svg> */}

                {/* <svg className="absolute w-full h-full " id="visual" viewBox="0 0 960 540" width="960" height="540" xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" version="1.1"><path d="M0 158L14.5 159.7C29 161.3 58 164.7 87.2 163.7C116.3 162.7 145.7 157.3 174.8 157.3C204 157.3 233 162.7 262 178C291 193.3 320 218.7 349 226.8C378 235 407 226 436.2 203.5C465.3 181 494.7 145 523.8 129.7C553 114.3 582 119.7 611 119.7C640 119.7 669 114.3 698 118C727 121.7 756 134.3 785.2 138.8C814.3 143.3 843.7 139.7 872.8 137.8C902 136 931 136 945.5 136L960 136L960 0L945.5 0C931 0 902 0 872.8 0C843.7 0 814.3 0 785.2 0C756 0 727 0 698 0C669 0 640 0 611 0C582 0 553 0 523.8 0C494.7 0 465.3 0 436.2 0C407 0 378 0 349 0C320 0 291 0 262 0C233 0 204 0 174.8 0C145.7 0 116.3 0 87.2 0C58 0 29 0 14.5 0L0 0Z" fill="#e1e5ea"></path><path d="M0 201L14.5 201.8C29 202.7 58 204.3 87.2 209.7C116.3 215 145.7 224 174.8 227.7C204 231.3 233 229.7 262 239.7C291 249.7 320 271.3 349 276.7C378 282 407 271 436.2 248.5C465.3 226 494.7 192 523.8 180.3C553 168.7 582 179.3 611 176.5C640 173.7 669 157.3 698 165.5C727 173.7 756 206.3 785.2 217.2C814.3 228 843.7 217 872.8 212.5C902 208 931 210 945.5 211L960 212L960 134L945.5 134C931 134 902 134 872.8 135.8C843.7 137.7 814.3 141.3 785.2 136.8C756 132.3 727 119.7 698 116C669 112.3 640 117.7 611 117.7C582 117.7 553 112.3 523.8 127.7C494.7 143 465.3 179 436.2 201.5C407 224 378 233 349 224.8C320 216.7 291 191.3 262 176C233 160.7 204 155.3 174.8 155.3C145.7 155.3 116.3 160.7 87.2 161.7C58 162.7 29 159.3 14.5 157.7L0 156Z" fill="#dadfe5"></path><path d="M0 293L14.5 293.8C29 294.7 58 296.3 87.2 300.8C116.3 305.3 145.7 312.7 174.8 310.8C204 309 233 298 262 310.5C291 323 320 359 349 363.5C378 368 407 341 436.2 320.3C465.3 299.7 494.7 285.3 523.8 277.3C553 269.3 582 267.7 611 263.2C640 258.7 669 251.3 698 253C727 254.7 756 265.3 785.2 270.7C814.3 276 843.7 276 872.8 278.8C902 281.7 931 287.3 945.5 290.2L960 293L960 210L945.5 209C931 208 902 206 872.8 210.5C843.7 215 814.3 226 785.2 215.2C756 204.3 727 171.7 698 163.5C669 155.3 640 171.7 611 174.5C582 177.3 553 166.7 523.8 178.3C494.7 190 465.3 224 436.2 246.5C407 269 378 280 349 274.7C320 269.3 291 247.7 262 237.7C233 227.7 204 229.3 174.8 225.7C145.7 222 116.3 213 87.2 207.7C58 202.3 29 200.7 14.5 199.8L0 199Z" fill="#d3d8e0"></path><path d="M0 449L14.5 450C29 451 58 453 87.2 461.2C116.3 469.3 145.7 483.7 174.8 480C204 476.3 233 454.7 262 450.2C291 445.7 320 458.3 349 457.5C378 456.7 407 442.3 436.2 437.8C465.3 433.3 494.7 438.7 523.8 446.7C553 454.7 582 465.3 611 461.7C640 458 669 440 698 430.2C727 420.3 756 418.7 785.2 420.5C814.3 422.3 843.7 427.7 872.8 440.2C902 452.7 931 472.3 945.5 482.2L960 492L960 291L945.5 288.2C931 285.3 902 279.7 872.8 276.8C843.7 274 814.3 274 785.2 268.7C756 263.3 727 252.7 698 251C669 249.3 640 256.7 611 261.2C582 265.7 553 267.3 523.8 275.3C494.7 283.3 465.3 297.7 436.2 318.3C407 339 378 366 349 361.5C320 357 291 321 262 308.5C233 296 204 307 174.8 308.8C145.7 310.7 116.3 303.3 87.2 298.8C58 294.3 29 292.7 14.5 291.8L0 291Z" fill="#cad0da"></path><path d="M0 541L14.5 541C29 541 58 541 87.2 541C116.3 541 145.7 541 174.8 541C204 541 233 541 262 541C291 541 320 541 349 541C378 541 407 541 436.2 541C465.3 541 494.7 541 523.8 541C553 541 582 541 611 541C640 541 669 541 698 541C727 541 756 541 785.2 541C814.3 541 843.7 541 872.8 541C902 541 931 541 945.5 541L960 541L960 490L945.5 480.2C931 470.3 902 450.7 872.8 438.2C843.7 425.7 814.3 420.3 785.2 418.5C756 416.7 727 418.3 698 428.2C669 438 640 456 611 459.7C582 463.3 553 452.7 523.8 444.7C494.7 436.7 465.3 431.3 436.2 435.8C407 440.3 378 454.7 349 455.5C320 456.3 291 443.7 262 448.2C233 452.7 204 474.3 174.8 478C145.7 481.7 116.3 467.3 87.2 459.2C58 451 29 449 14.5 448L0 447Z" fill="#c2c9d4"></path></svg> */}

                <svg className="absolute top-0" id="wave" style={{ transform: 'rotate(180deg)', transition: '0.3s' }} viewBox="0 0 1440 200" version="1.1" xmlns="http://www.w3.org/2000/svg"><defs><linearGradient id="sw-gradient-0" x1="0" x2="0" y1="1" y2="0"><stop stop-color="rgba(230.276, 230.276, 230.276, 1)" offset="0%"></stop><stop stop-color="rgba(234.829, 234.829, 234.829, 1)" offset="100%"></stop></linearGradient></defs><path style={{ transform: 'translate(0, 0px)', opacity: 1 }} fill="url(#sw-gradient-0)" d="M0,20L60,40C120,60,240,100,360,123.3C480,147,600,153,720,130C840,107,960,53,1080,26.7C1200,0,1320,0,1440,6.7C1560,13,1680,27,1800,30C1920,33,2040,27,2160,46.7C2280,67,2400,113,2520,120C2640,127,2760,93,2880,90C3000,87,3120,113,3240,133.3C3360,153,3480,167,3600,170C3720,173,3840,167,3960,143.3C4080,120,4200,80,4320,66.7C4440,53,4560,67,4680,86.7C4800,107,4920,133,5040,140C5160,147,5280,133,5400,123.3C5520,113,5640,107,5760,106.7C5880,107,6000,113,6120,123.3C6240,133,6360,147,6480,130C6600,113,6720,67,6840,56.7C6960,47,7080,73,7200,90C7320,107,7440,113,7560,100C7680,87,7800,53,7920,60C8040,67,8160,113,8280,116.7C8400,120,8520,80,8580,60L8640,40L8640,200L8580,200C8520,200,8400,200,8280,200C8160,200,8040,200,7920,200C7800,200,7680,200,7560,200C7440,200,7320,200,7200,200C7080,200,6960,200,6840,200C6720,200,6600,200,6480,200C6360,200,6240,200,6120,200C6000,200,5880,200,5760,200C5640,200,5520,200,5400,200C5280,200,5160,200,5040,200C4920,200,4800,200,4680,200C4560,200,4440,200,4320,200C4200,200,4080,200,3960,200C3840,200,3720,200,3600,200C3480,200,3360,200,3240,200C3120,200,3000,200,2880,200C2760,200,2640,200,2520,200C2400,200,2280,200,2160,200C2040,200,1920,200,1800,200C1680,200,1560,200,1440,200C1320,200,1200,200,1080,200C960,200,840,200,720,200C600,200,480,200,360,200C240,200,120,200,60,200L0,200Z"></path><defs><linearGradient id="sw-gradient-1" x1="0" x2="0" y1="1" y2="0"><stop stop-color="rgba(173.356, 173.356, 173.356, 1)" offset="0%"></stop><stop stop-color="rgba(223.445, 223.445, 223.445, 1)" offset="100%"></stop></linearGradient></defs><path style={{ transform: 'translate(0, 50px)', opacity: 0.9 }} fill="url(#sw-gradient-1)" d="M0,0L60,23.3C120,47,240,93,360,120C480,147,600,153,720,136.7C840,120,960,80,1080,70C1200,60,1320,80,1440,93.3C1560,107,1680,113,1800,126.7C1920,140,2040,160,2160,156.7C2280,153,2400,127,2520,126.7C2640,127,2760,153,2880,160C3000,167,3120,153,3240,146.7C3360,140,3480,140,3600,123.3C3720,107,3840,73,3960,63.3C4080,53,4200,67,4320,80C4440,93,4560,107,4680,106.7C4800,107,4920,93,5040,100C5160,107,5280,133,5400,150C5520,167,5640,173,5760,170C5880,167,6000,153,6120,143.3C6240,133,6360,127,6480,110C6600,93,6720,67,6840,66.7C6960,67,7080,93,7200,113.3C7320,133,7440,147,7560,143.3C7680,140,7800,120,7920,93.3C8040,67,8160,33,8280,16.7C8400,0,8520,0,8580,0L8640,0L8640,200L8580,200C8520,200,8400,200,8280,200C8160,200,8040,200,7920,200C7800,200,7680,200,7560,200C7440,200,7320,200,7200,200C7080,200,6960,200,6840,200C6720,200,6600,200,6480,200C6360,200,6240,200,6120,200C6000,200,5880,200,5760,200C5640,200,5520,200,5400,200C5280,200,5160,200,5040,200C4920,200,4800,200,4680,200C4560,200,4440,200,4320,200C4200,200,4080,200,3960,200C3840,200,3720,200,3600,200C3480,200,3360,200,3240,200C3120,200,3000,200,2880,200C2760,200,2640,200,2520,200C2400,200,2280,200,2160,200C2040,200,1920,200,1800,200C1680,200,1560,200,1440,200C1320,200,1200,200,1080,200C960,200,840,200,720,200C600,200,480,200,360,200C240,200,120,200,60,200L0,200Z"></path><defs><linearGradient id="sw-gradient-2" x1="0" x2="0" y1="1" y2="0"><stop stop-color="rgba(223.445, 223.445, 223.445, 1)" offset="0%"></stop><stop stop-color="rgba(205.231, 205.231, 205.231, 1)" offset="100%"></stop></linearGradient></defs><path style={{ transform: 'translate(0, 100px)', opacity: 0.8 }} fill="url(#sw-gradient-2)" d="M0,0L60,30C120,60,240,120,360,120C480,120,600,60,720,40C840,20,960,40,1080,63.3C1200,87,1320,113,1440,130C1560,147,1680,153,1800,140C1920,127,2040,93,2160,93.3C2280,93,2400,127,2520,133.3C2640,140,2760,120,2880,116.7C3000,113,3120,127,3240,140C3360,153,3480,167,3600,143.3C3720,120,3840,60,3960,40C4080,20,4200,40,4320,66.7C4440,93,4560,127,4680,130C4800,133,4920,107,5040,96.7C5160,87,5280,93,5400,86.7C5520,80,5640,60,5760,60C5880,60,6000,80,6120,96.7C6240,113,6360,127,6480,126.7C6600,127,6720,113,6840,90C6960,67,7080,33,7200,40C7320,47,7440,93,7560,93.3C7680,93,7800,47,7920,36.7C8040,27,8160,53,8280,76.7C8400,100,8520,120,8580,130L8640,140L8640,200L8580,200C8520,200,8400,200,8280,200C8160,200,8040,200,7920,200C7800,200,7680,200,7560,200C7440,200,7320,200,7200,200C7080,200,6960,200,6840,200C6720,200,6600,200,6480,200C6360,200,6240,200,6120,200C6000,200,5880,200,5760,200C5640,200,5520,200,5400,200C5280,200,5160,200,5040,200C4920,200,4800,200,4680,200C4560,200,4440,200,4320,200C4200,200,4080,200,3960,200C3840,200,3720,200,3600,200C3480,200,3360,200,3240,200C3120,200,3000,200,2880,200C2760,200,2640,200,2520,200C2400,200,2280,200,2160,200C2040,200,1920,200,1800,200C1680,200,1560,200,1440,200C1320,200,1200,200,1080,200C960,200,840,200,720,200C600,200,480,200,360,200C240,200,120,200,60,200L0,200Z"></path></svg>

                <svg className="absolute bottom-0" id="wave" style={{ transform: 'rotate(0deg)', transition: '0.3s' }} viewBox="0 0 1440 200" version="1.1" xmlns="http://www.w3.org/2000/svg"><defs><linearGradient id="sw-gradient-0" x1="0" x2="0" y1="1" y2="0"><stop stop-color="rgba(230.276, 230.276, 230.276, 1)" offset="0%"></stop><stop stop-color="rgba(234.829, 234.829, 234.829, 1)" offset="100%"></stop></linearGradient></defs><path style={{ transform: 'translate(0, 0px)', opacity: 1 }} fill="url(#sw-gradient-0)" d="M0,20L60,40C120,60,240,100,360,123.3C480,147,600,153,720,130C840,107,960,53,1080,26.7C1200,0,1320,0,1440,6.7C1560,13,1680,27,1800,30C1920,33,2040,27,2160,46.7C2280,67,2400,113,2520,120C2640,127,2760,93,2880,90C3000,87,3120,113,3240,133.3C3360,153,3480,167,3600,170C3720,173,3840,167,3960,143.3C4080,120,4200,80,4320,66.7C4440,53,4560,67,4680,86.7C4800,107,4920,133,5040,140C5160,147,5280,133,5400,123.3C5520,113,5640,107,5760,106.7C5880,107,6000,113,6120,123.3C6240,133,6360,147,6480,130C6600,113,6720,67,6840,56.7C6960,47,7080,73,7200,90C7320,107,7440,113,7560,100C7680,87,7800,53,7920,60C8040,67,8160,113,8280,116.7C8400,120,8520,80,8580,60L8640,40L8640,200L8580,200C8520,200,8400,200,8280,200C8160,200,8040,200,7920,200C7800,200,7680,200,7560,200C7440,200,7320,200,7200,200C7080,200,6960,200,6840,200C6720,200,6600,200,6480,200C6360,200,6240,200,6120,200C6000,200,5880,200,5760,200C5640,200,5520,200,5400,200C5280,200,5160,200,5040,200C4920,200,4800,200,4680,200C4560,200,4440,200,4320,200C4200,200,4080,200,3960,200C3840,200,3720,200,3600,200C3480,200,3360,200,3240,200C3120,200,3000,200,2880,200C2760,200,2640,200,2520,200C2400,200,2280,200,2160,200C2040,200,1920,200,1800,200C1680,200,1560,200,1440,200C1320,200,1200,200,1080,200C960,200,840,200,720,200C600,200,480,200,360,200C240,200,120,200,60,200L0,200Z"></path><defs><linearGradient id="sw-gradient-1" x1="0" x2="0" y1="1" y2="0"><stop stop-color="rgba(173.356, 173.356, 173.356, 1)" offset="0%"></stop><stop stop-color="rgba(223.445, 223.445, 223.445, 1)" offset="100%"></stop></linearGradient></defs><path style={{ transform: 'translate(0, 50px)', opacity: 0.9 }} fill="url(#sw-gradient-1)" d="M0,0L60,23.3C120,47,240,93,360,120C480,147,600,153,720,136.7C840,120,960,80,1080,70C1200,60,1320,80,1440,93.3C1560,107,1680,113,1800,126.7C1920,140,2040,160,2160,156.7C2280,153,2400,127,2520,126.7C2640,127,2760,153,2880,160C3000,167,3120,153,3240,146.7C3360,140,3480,140,3600,123.3C3720,107,3840,73,3960,63.3C4080,53,4200,67,4320,80C4440,93,4560,107,4680,106.7C4800,107,4920,93,5040,100C5160,107,5280,133,5400,150C5520,167,5640,173,5760,170C5880,167,6000,153,6120,143.3C6240,133,6360,127,6480,110C6600,93,6720,67,6840,66.7C6960,67,7080,93,7200,113.3C7320,133,7440,147,7560,143.3C7680,140,7800,120,7920,93.3C8040,67,8160,33,8280,16.7C8400,0,8520,0,8580,0L8640,0L8640,200L8580,200C8520,200,8400,200,8280,200C8160,200,8040,200,7920,200C7800,200,7680,200,7560,200C7440,200,7320,200,7200,200C7080,200,6960,200,6840,200C6720,200,6600,200,6480,200C6360,200,6240,200,6120,200C6000,200,5880,200,5760,200C5640,200,5520,200,5400,200C5280,200,5160,200,5040,200C4920,200,4800,200,4680,200C4560,200,4440,200,4320,200C4200,200,4080,200,3960,200C3840,200,3720,200,3600,200C3480,200,3360,200,3240,200C3120,200,3000,200,2880,200C2760,200,2640,200,2520,200C2400,200,2280,200,2160,200C2040,200,1920,200,1800,200C1680,200,1560,200,1440,200C1320,200,1200,200,1080,200C960,200,840,200,720,200C600,200,480,200,360,200C240,200,120,200,60,200L0,200Z"></path><defs><linearGradient id="sw-gradient-2" x1="0" x2="0" y1="1" y2="0"><stop stop-color="rgba(223.445, 223.445, 223.445, 1)" offset="0%"></stop><stop stop-color="rgba(205.231, 205.231, 205.231, 1)" offset="100%"></stop></linearGradient></defs><path style={{ transform: 'translate(0, 100px)', opacity: 0.8 }} fill="url(#sw-gradient-2)" d="M0,0L60,30C120,60,240,120,360,120C480,120,600,60,720,40C840,20,960,40,1080,63.3C1200,87,1320,113,1440,130C1560,147,1680,153,1800,140C1920,127,2040,93,2160,93.3C2280,93,2400,127,2520,133.3C2640,140,2760,120,2880,116.7C3000,113,3120,127,3240,140C3360,153,3480,167,3600,143.3C3720,120,3840,60,3960,40C4080,20,4200,40,4320,66.7C4440,93,4560,127,4680,130C4800,133,4920,107,5040,96.7C5160,87,5280,93,5400,86.7C5520,80,5640,60,5760,60C5880,60,6000,80,6120,96.7C6240,113,6360,127,6480,126.7C6600,127,6720,113,6840,90C6960,67,7080,33,7200,40C7320,47,7440,93,7560,93.3C7680,93,7800,47,7920,36.7C8040,27,8160,53,8280,76.7C8400,100,8520,120,8580,130L8640,140L8640,200L8580,200C8520,200,8400,200,8280,200C8160,200,8040,200,7920,200C7800,200,7680,200,7560,200C7440,200,7320,200,7200,200C7080,200,6960,200,6840,200C6720,200,6600,200,6480,200C6360,200,6240,200,6120,200C6000,200,5880,200,5760,200C5640,200,5520,200,5400,200C5280,200,5160,200,5040,200C4920,200,4800,200,4680,200C4560,200,4440,200,4320,200C4200,200,4080,200,3960,200C3840,200,3720,200,3600,200C3480,200,3360,200,3240,200C3120,200,3000,200,2880,200C2760,200,2640,200,2520,200C2400,200,2280,200,2160,200C2040,200,1920,200,1800,200C1680,200,1560,200,1440,200C1320,200,1200,200,1080,200C960,200,840,200,720,200C600,200,480,200,360,200C240,200,120,200,60,200L0,200Z"></path></svg>
                {/* <div className="absolute h-full w-full mt-10s">

                    <Blob />
                </div> */}
                <div className="flex flex-col bg-glass w-[500px] max-sm:w-full px-7 gap-2  py-10">
                    <h1 className="text-[1.5rem] mb-5  max-sm:text-[1.3rem] font-bold">

                        Log in
                    </h1>
                    <input className="border-l-4 border-slate-300 p-3  outline-none shadow-sm focus:border-slate-500 " value={username} onChange={(e) => setUsername(e.target.value)} type="text" placeholder="Enter username" />
                    <input className="border-l-4 border-slate-300 p-3  outline-none shadow-sm focus:border-slate-500 " value={password} onChange={(e) => setPassword(e.target.value)} type="password" placeholder="Enter password" />
                    <button className="bg-green-700 px-5 mt-3 btn-styled py-2 text-white hover:bg-green-600" onClick={handleSignIn}>Sign in</button>
                </div>
                <AnimatePresence>

                    {message &&
                        <motion.div initial={{ y: -500 }} animate={{ y: 0 }} exit={{ y: -500 }} className="absolute top-5 py-[10px] px-[15px] bg-red-700 text-white flex  items-center justify-center gap-3  rounded-md shadow-sm shadow-black ">
                            <h1 className="">{message}</h1>
                            <button onClick={() => setMessage(null)} className="">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" className="w-4 h-4">
                                    <path fillRule="evenodd" d="M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14Zm2.78-4.22a.75.75 0 0 1-1.06 0L8 9.06l-1.72 1.72a.75.75 0 1 1-1.06-1.06L6.94 8 5.22 6.28a.75.75 0 0 1 1.06-1.06L8 6.94l1.72-1.72a.75.75 0 1 1 1.06 1.06L9.06 8l1.72 1.72a.75.75 0 0 1 0 1.06Z" clipRule="evenodd" />
                                </svg>
                            </button>
                        </motion.div>
                    }
                </AnimatePresence>
                {loading && <SpinningLoader cover={true} />}
            </div>
        </div>
    )
}
